{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///home/vsingh/Photography-Managing-App/my-app/src/utils/supabase/server.js"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  // Create a server's supabase client with newly configured cookie,\n  // which could be used to maintain user's session\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,kEAAkE;IAClE,iDAAiD;IACjD,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,uUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/vsingh/Photography-Managing-App/my-app/src/app/api/shoots/insert-shoots/route.js"],"sourcesContent":["import { createClient } from '@/utils/supabase/server';\n\nexport async function POST(request) {\n  const id = request.nextUrl.searchParams.get('id');\n  const supabase = await createClient();\n\n  const { data: { user }, error: userError } = await supabase.auth.getUser();\n  if (!user || userError) {\n    return Response.json({ data: null, error: 'User not found' }, { status: 401 });\n  }\n\n  const body = await request.json();\n\n  const { user: _user, id: _id, ...safeBody } = body;\n\n  const shootToInsert = {...safeBody, user: user.id };\n\n  const { data, error } = await supabase\n    .from('shoots')\n    .insert([shootToInsert])\n    .select()\n    .single();\n\n    if (error) {\n      console.log(error);\n      return Response.json({ data: null, error: error.message }, { status: 400 });\n    }\n\n    return Response.json({ data, error: null }, { status: 200 });\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAO;IAChC,MAAM,KAAK,QAAQ,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;IAC5C,MAAM,WAAW,MAAM,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD;IAElC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IACxE,IAAI,CAAC,QAAQ,WAAW;QACtB,OAAO,SAAS,IAAI,CAAC;YAAE,MAAM;YAAM,OAAO;QAAiB,GAAG;YAAE,QAAQ;QAAI;IAC9E;IAEA,MAAM,OAAO,MAAM,QAAQ,IAAI;IAE/B,MAAM,EAAE,MAAM,KAAK,EAAE,IAAI,GAAG,EAAE,GAAG,UAAU,GAAG;IAE9C,MAAM,gBAAgB;QAAC,GAAG,QAAQ;QAAE,MAAM,KAAK,EAAE;IAAC;IAElD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,UACL,MAAM,CAAC;QAAC;KAAc,EACtB,MAAM,GACN,MAAM;IAEP,IAAI,OAAO;QACT,QAAQ,GAAG,CAAC;QACZ,OAAO,SAAS,IAAI,CAAC;YAAE,MAAM;YAAM,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC3E;IAEA,OAAO,SAAS,IAAI,CAAC;QAAE;QAAM,OAAO;IAAK,GAAG;QAAE,QAAQ;IAAI;AAC9D","debugId":null}}]
}