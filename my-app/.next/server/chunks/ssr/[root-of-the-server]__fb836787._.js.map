{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/account/account.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"accountElement\": \"account-module__zd0OHa__accountElement\",\n  \"accountHeader\": \"account-module__zd0OHa__accountHeader\",\n  \"signoutbutton\": \"account-module__zd0OHa__signoutbutton\",\n  \"signoutform\": \"account-module__zd0OHa__signoutform\",\n  \"updatebutton\": \"account-module__zd0OHa__updatebutton\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///C:/CodeProjects/Photography-Managing-App/my-app/src/utils/supabase/client.js"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\r\n\r\nexport function createClient() {\r\n  // Create a supabase client on the browser with project's credentials\r\n  return createBrowserClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\r\n  )\r\n}"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS;IACd,qEAAqE;IACrE,OAAO,CAAA,GAAA,0KAAA,CAAA,sBAAmB,AAAD;AAI3B","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/CodeProjects/Photography-Managing-App/my-app/src/app/account/account-form.jsx"],"sourcesContent":["'use client'\r\nimport styles from './account.module.css'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { createClient } from '@/utils/supabase/client'\r\nexport default function AccountForm({ user }) {\r\n  const router = useRouter();\r\n  const supabase = createClient()\r\n  const [loading, setLoading] = useState(true)\r\n  const [fullname, setFullname] = useState(null)\r\n  const [username, setUsername] = useState(null)\r\n  const [website, setWebsite] = useState(null)\r\n  const [avatar_url, setAvatarUrl] = useState(null)\r\n\r\n  const getProfile = useCallback(async () => {\r\n    try {\r\n      setLoading(true)\r\n\r\n      const { data, error, status } = await supabase\r\n        .from('profiles')\r\n        .select(`full_name, username, website, avatar_url`)\r\n        .eq('id', user?.id)\r\n        .single()\r\n\r\n      if (error && status !== 406) {\r\n        throw error\r\n      }\r\n\r\n      if (data) {\r\n        setFullname(data.full_name)\r\n        setUsername(data.username)\r\n        setWebsite(data.website)\r\n        setAvatarUrl(data.avatar_url)\r\n      }\r\n    } catch (error) {\r\n      alert('Error loading user data!')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n    shoots_data = get_shoots(supabase, user);\r\n\r\n  }, [user, supabase])\r\n\r\n  useEffect(() => {\r\n    getProfile()\r\n  }, [user, getProfile])\r\n\r\n  async function updateProfile({ username, website, avatar_url }) {\r\n    try {\r\n      setLoading(true)\r\n\r\n      const { error } = await supabase.from('profiles').upsert({\r\n        id: user?.id,\r\n        full_name: fullname,\r\n        username,\r\n        website,\r\n        avatar_url,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      if (error) throw error\r\n      alert('Profile updated!')\r\n    } catch (error) {\r\n      alert('Error updating the data!')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className={styles.accountHeader}>\r\n        {<h1 >Hello {fullname}</h1>}\r\n        \r\n        <form action=\"/auth/signout\" method=\"post\" className={styles.signoutform}>\r\n          <button className={styles.signoutbutton} type=\"submit\">\r\n            Sign out\r\n          </button>\r\n        </form>\r\n      </header>\r\n      <div>\r\n\r\n        <div className=\"form-widget\">\r\n          <div className={styles.accountElement}>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input id=\"email\" type=\"text\" value={user?.email} disabled />\r\n          </div>\r\n          <div className={styles.accountElement}>\r\n            <label htmlFor=\"fullName\">Full Name</label>\r\n            <input\r\n              id=\"fullName\"\r\n              type=\"text\"\r\n              value={fullname || ''}\r\n              onChange={(e) => setFullname(e.target.value)}\r\n              />\r\n          </div>\r\n          <div className={styles.accountElement}>\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              id=\"username\"\r\n              type=\"text\"\r\n              value={username || ''}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n          </div>\r\n          <div className={styles.accountElement}>\r\n            <label htmlFor=\"website\">Website</label>\r\n            <input\r\n              id=\"website\"\r\n              type=\"url\"\r\n              value={website || ''}\r\n              onChange={(e) => setWebsite(e.target.value)}\r\n              />\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              className={styles.updatebutton}\r\n              onClick={() => updateProfile({ fullname, username, website, avatar_url })}\r\n              disabled={loading}\r\n              >\r\n              {loading ? 'Loading ...' : 'Update'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button onClick={() => router.push(\"/shoots\")}>Shoots</button>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAIe,SAAS,YAAY,EAAE,IAAI,EAAE;IAC1C,MAAM,SAAS;IACf,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,YAAY,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE5C,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,IAAI;YACF,WAAW;YAEX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,SACnC,IAAI,CAAC,YACL,MAAM,CAAC,CAAC,wCAAwC,CAAC,EACjD,EAAE,CAAC,MAAM,MAAM,IACf,MAAM;YAET,IAAI,SAAS,WAAW,KAAK;gBAC3B,MAAM;YACR;YAEA,IAAI,MAAM;gBACR,YAAY,KAAK,SAAS;gBAC1B,YAAY,KAAK,QAAQ;gBACzB,WAAW,KAAK,OAAO;gBACvB,aAAa,KAAK,UAAU;YAC9B;QACF,EAAE,OAAO,OAAO;YACd,MAAM;QACR,SAAU;YACR,WAAW;QACb;QACA,cAAc,WAAW,UAAU;IAErC,GAAG;QAAC;QAAM;KAAS;IAEnB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;QAAM;KAAW;IAErB,eAAe,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE;QAC5D,IAAI;YACF,WAAW;YAEX,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,YAAY,MAAM,CAAC;gBACvD,IAAI,MAAM;gBACV,WAAW;gBACX;gBACA;gBACA;gBACA,YAAY,IAAI,OAAO,WAAW;YACpC;YACA,IAAI,OAAO,MAAM;YACjB,MAAM;QACR,EAAE,OAAO,OAAO;YACd,MAAM;QACR,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAO,WAAW,4IAAA,CAAA,UAAM,CAAC,aAAa;;kCACpC,8OAAC;;4BAAI;4BAAO;;;;;;;kCAEb,8OAAC;wBAAK,QAAO;wBAAgB,QAAO;wBAAO,WAAW,4IAAA,CAAA,UAAM,CAAC,WAAW;kCACtE,cAAA,8OAAC;4BAAO,WAAW,4IAAA,CAAA,UAAM,CAAC,aAAa;4BAAE,MAAK;sCAAS;;;;;;;;;;;;;;;;;0BAK3D,8OAAC;0BAEC,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAW,4IAAA,CAAA,UAAM,CAAC,cAAc;;8CACnC,8OAAC;oCAAM,SAAQ;8CAAQ;;;;;;8CACvB,8OAAC;oCAAM,IAAG;oCAAQ,MAAK;oCAAO,OAAO,MAAM;oCAAO,QAAQ;;;;;;;;;;;;sCAE5D,8OAAC;4BAAI,WAAW,4IAAA,CAAA,UAAM,CAAC,cAAc;;8CACnC,8OAAC;oCAAM,SAAQ;8CAAW;;;;;;8CAC1B,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,OAAO,YAAY;oCACnB,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAG/C,8OAAC;4BAAI,WAAW,4IAAA,CAAA,UAAM,CAAC,cAAc;;8CACnC,8OAAC;oCAAM,SAAQ;8CAAW;;;;;;8CAC1B,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,OAAO,YAAY;oCACnB,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAG/C,8OAAC;4BAAI,WAAW,4IAAA,CAAA,UAAM,CAAC,cAAc;;8CACnC,8OAAC;oCAAM,SAAQ;8CAAU;;;;;;8CACzB,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,OAAO,WAAW;oCAClB,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAI9C,8OAAC;sCACC,cAAA,8OAAC;gCACC,WAAW,4IAAA,CAAA,UAAM,CAAC,YAAY;gCAC9B,SAAS,IAAM,cAAc;wCAAE;wCAAU;wCAAU;wCAAS;oCAAW;gCACvE,UAAU;0CAET,UAAU,gBAAgB;;;;;;;;;;;;;;;;;;;;;;0BAKnC,8OAAC;gBAAO,SAAS,IAAM,OAAO,IAAI,CAAC;0BAAY;;;;;;;;;;;;AAGrD","debugId":null}}]
}