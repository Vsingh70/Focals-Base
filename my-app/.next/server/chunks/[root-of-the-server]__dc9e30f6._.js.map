{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///home/vsingh/Photography-Managing-App/my-app/src/utils/supabase/server.js"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  // Create a server's supabase client with newly configured cookie,\n  // which could be used to maintain user's session\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,kEAAkE;IAClE,iDAAiD;IACjD,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,uUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/vsingh/Photography-Managing-App/my-app/src/app/auth/signout/route.js"],"sourcesContent":["import { createClient } from '@/utils/supabase/server'\nimport { revalidatePath } from 'next/cache'\nimport { NextResponse } from 'next/server'\n\nexport async function POST(req) {\n  const supabase = await createClient()\n\n  // Check if a user's logged in\n  const {\n    data: { user },\n  } = await supabase.auth.getUser()\n\n  if (user) {\n    await supabase.auth.signOut()\n  }\n\n  revalidatePath('/', 'layout')\n  return NextResponse.redirect(new URL('/login', req.url), {\n    status: 302,\n  })\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAG;IAC5B,MAAM,WAAW,MAAM,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD;IAElC,8BAA8B;IAC9B,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAE/B,IAAI,MAAM;QACR,MAAM,SAAS,IAAI,CAAC,OAAO;IAC7B;IAEA,CAAA,GAAA,+HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG,GAAG;QACvD,QAAQ;IACV;AACF","debugId":null}}]
}