{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///home/vsingh/Photography-Managing-App/my-app/src/utils/supabase/server.js"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  // Create a server's supabase client with newly configured cookie,\n  // which could be used to maintain user's session\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,kEAAkE;IAClE,iDAAiD;IACjD,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,uUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/vsingh/Photography-Managing-App/my-app/src/app/api/gear/get-gear/route.js"],"sourcesContent":["import { createClient } from '@/utils/supabase/server';\n\nexport async function GET() {\n  try {\n    const supabase = await createClient();\n\n    // Get user info\n    const { data: { user }, error: userError } = await supabase.auth.getUser();\n    if (!user || userError) {\n      return Response.json({ data: null, error: 'User not found' }, { status: 401 });\n    }\n\n    // Query shoots for this user (RLS should enforce security)\n    const { data, error } = await supabase\n      .from('gear')\n      .select('*')\n      .eq('user', user.id)\n      .order('created_at', { ascending: true })\n\n    if (error) {\n      return Response.json({ data: null, error: error.message }, { status: 500 });\n    }\n\n    return Response.json({ data, error: null }, { status: 200 });\n  } catch (error) {\n    return Response.json({ data: null, error: error.message }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,oIAAA,CAAA,eAAY,AAAD;QAElC,gBAAgB;QAChB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QACxE,IAAI,CAAC,QAAQ,WAAW;YACtB,OAAO,SAAS,IAAI,CAAC;gBAAE,MAAM;gBAAM,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,2DAA2D;QAC3D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,QACL,MAAM,CAAC,KACP,EAAE,CAAC,QAAQ,KAAK,EAAE,EAClB,KAAK,CAAC,cAAc;YAAE,WAAW;QAAK;QAEzC,IAAI,OAAO;YACT,OAAO,SAAS,IAAI,CAAC;gBAAE,MAAM;gBAAM,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,OAAO,SAAS,IAAI,CAAC;YAAE;YAAM,OAAO;QAAK,GAAG;YAAE,QAAQ;QAAI;IAC5D,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,IAAI,CAAC;YAAE,MAAM;YAAM,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACF","debugId":null}}]
}